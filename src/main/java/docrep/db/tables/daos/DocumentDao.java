/*
 * This file is generated by jOOQ.
*/
package docrep.db.tables.daos;


import docrep.db.tables.Document;
import docrep.db.tables.records.DocumentRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentDao extends DAOImpl<DocumentRecord, docrep.db.tables.pojos.Document, Integer> {

    /**
     * Create a new DocumentDao without any configuration
     */
    public DocumentDao() {
        super(Document.DOCUMENT, docrep.db.tables.pojos.Document.class);
    }

    /**
     * Create a new DocumentDao with an attached configuration
     */
    public DocumentDao(Configuration configuration) {
        super(Document.DOCUMENT, docrep.db.tables.pojos.Document.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(docrep.db.tables.pojos.Document object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchById(Integer... values) {
        return fetch(Document.DOCUMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public docrep.db.tables.pojos.Document fetchOneById(Integer value) {
        return fetchOne(Document.DOCUMENT.ID, value);
    }

    /**
     * Fetch records that have <code>number IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByNumber(String... values) {
        return fetch(Document.DOCUMENT.NUMBER, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByTitle(String... values) {
        return fetch(Document.DOCUMENT.TITLE, values);
    }

    /**
     * Fetch records that have <code>barcode IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByBarcode(String... values) {
        return fetch(Document.DOCUMENT.BARCODE, values);
    }

    /**
     * Fetch records that have <code>register_date IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByRegisterDate(Timestamp... values) {
        return fetch(Document.DOCUMENT.REGISTER_DATE, values);
    }

    /**
     * Fetch records that have <code>storage_location_id IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByStorageLocationId(Integer... values) {
        return fetch(Document.DOCUMENT.STORAGE_LOCATION_ID, values);
    }

    /**
     * Fetch records that have <code>owner_id IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByOwnerId(Integer... values) {
        return fetch(Document.DOCUMENT.OWNER_ID, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByDescription(String... values) {
        return fetch(Document.DOCUMENT.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByVersion(Integer... values) {
        return fetch(Document.DOCUMENT.VERSION, values);
    }

    /**
     * Fetch records that have <code>edit_date IN (values)</code>
     */
    public List<docrep.db.tables.pojos.Document> fetchByEditDate(Timestamp... values) {
        return fetch(Document.DOCUMENT.EDIT_DATE, values);
    }
}
