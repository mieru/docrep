/*
 * This file is generated by jOOQ.
*/
package docrep.db.tables.daos;


import docrep.db.tables.StorageLocation;
import docrep.db.tables.records.StorageLocationRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StorageLocationDao extends DAOImpl<StorageLocationRecord, docrep.db.tables.pojos.StorageLocation, Integer> {

    /**
     * Create a new StorageLocationDao without any configuration
     */
    public StorageLocationDao() {
        super(StorageLocation.STORAGE_LOCATION, docrep.db.tables.pojos.StorageLocation.class);
    }

    /**
     * Create a new StorageLocationDao with an attached configuration
     */
    public StorageLocationDao(Configuration configuration) {
        super(StorageLocation.STORAGE_LOCATION, docrep.db.tables.pojos.StorageLocation.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(docrep.db.tables.pojos.StorageLocation object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchById(Integer... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public docrep.db.tables.pojos.StorageLocation fetchOneById(Integer value) {
        return fetchOne(StorageLocation.STORAGE_LOCATION.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchByName(String... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.NAME, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchByDescription(String... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchByLongitude(Double... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.LONGITUDE, values);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchByLatitude(Double... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.LATITUDE, values);
    }

    /**
     * Fetch records that have <code>superior_storage_loc_id IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchBySuperiorStorageLocId(Integer... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.SUPERIOR_STORAGE_LOC_ID, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchByType(String... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.TYPE, values);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<docrep.db.tables.pojos.StorageLocation> fetchByAccountId(Integer... values) {
        return fetch(StorageLocation.STORAGE_LOCATION.ACCOUNT_ID, values);
    }
}
