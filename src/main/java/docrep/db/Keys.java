/*
 * This file is generated by jOOQ.
*/
package docrep.db;


import docrep.db.tables.Account;
import docrep.db.tables.Address;
import docrep.db.tables.Contact;
import docrep.db.tables.Document;
import docrep.db.tables.Person;
import docrep.db.tables.StorageLocation;
import docrep.db.tables.records.AccountRecord;
import docrep.db.tables.records.AddressRecord;
import docrep.db.tables.records.ContactRecord;
import docrep.db.tables.records.DocumentRecord;
import docrep.db.tables.records.PersonRecord;
import docrep.db.tables.records.StorageLocationRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
    public static final Identity<AddressRecord, Integer> IDENTITY_ADDRESS = Identities0.IDENTITY_ADDRESS;
    public static final Identity<ContactRecord, Integer> IDENTITY_CONTACT = Identities0.IDENTITY_CONTACT;
    public static final Identity<DocumentRecord, Integer> IDENTITY_DOCUMENT = Identities0.IDENTITY_DOCUMENT;
    public static final Identity<PersonRecord, Integer> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<StorageLocationRecord, Integer> IDENTITY_STORAGE_LOCATION = Identities0.IDENTITY_STORAGE_LOCATION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = UniqueKeys0.ACCOUNT_PKEY;
    public static final UniqueKey<AccountRecord> ACCOUNT_USERNAME_KEY = UniqueKeys0.ACCOUNT_USERNAME_KEY;
    public static final UniqueKey<AddressRecord> ADDRESS_PKEY = UniqueKeys0.ADDRESS_PKEY;
    public static final UniqueKey<ContactRecord> CONTACT_PKEY = UniqueKeys0.CONTACT_PKEY;
    public static final UniqueKey<DocumentRecord> DOCUMENT_PKEY = UniqueKeys0.DOCUMENT_PKEY;
    public static final UniqueKey<PersonRecord> PERSON_PKEY = UniqueKeys0.PERSON_PKEY;
    public static final UniqueKey<StorageLocationRecord> STORAGE_LOCATION_PKEY = UniqueKeys0.STORAGE_LOCATION_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, PersonRecord> ACCOUNT__PERSON_ID_FK = ForeignKeys0.ACCOUNT__PERSON_ID_FK;
    public static final ForeignKey<ContactRecord, PersonRecord> CONTACT__ID_PERSON_FK = ForeignKeys0.CONTACT__ID_PERSON_FK;
    public static final ForeignKey<DocumentRecord, AccountRecord> DOCUMENT__OWNER_ID_FK = ForeignKeys0.DOCUMENT__OWNER_ID_FK;
    public static final ForeignKey<PersonRecord, AddressRecord> PERSON__ADDRESS_ID_FK = ForeignKeys0.PERSON__ADDRESS_ID_FK;
    public static final ForeignKey<StorageLocationRecord, StorageLocationRecord> STORAGE_LOCATION__SUPERIOR_STORAGE_LOC_ID_FK = ForeignKeys0.STORAGE_LOCATION__SUPERIOR_STORAGE_LOC_ID_FK;
    public static final ForeignKey<StorageLocationRecord, AccountRecord> STORAGE_LOCATION__ACCOUNT_ID_FK = ForeignKeys0.STORAGE_LOCATION__ACCOUNT_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AccountRecord, Integer> IDENTITY_ACCOUNT = createIdentity(Account.ACCOUNT, Account.ACCOUNT.ID);
        public static Identity<AddressRecord, Integer> IDENTITY_ADDRESS = createIdentity(Address.ADDRESS, Address.ADDRESS.ID);
        public static Identity<ContactRecord, Integer> IDENTITY_CONTACT = createIdentity(Contact.CONTACT, Contact.CONTACT.ID);
        public static Identity<DocumentRecord, Integer> IDENTITY_DOCUMENT = createIdentity(Document.DOCUMENT, Document.DOCUMENT.ID);
        public static Identity<PersonRecord, Integer> IDENTITY_PERSON = createIdentity(Person.PERSON, Person.PERSON.ID);
        public static Identity<StorageLocationRecord, Integer> IDENTITY_STORAGE_LOCATION = createIdentity(StorageLocation.STORAGE_LOCATION, StorageLocation.STORAGE_LOCATION.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccountRecord> ACCOUNT_PKEY = createUniqueKey(Account.ACCOUNT, "account_pkey", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRecord> ACCOUNT_USERNAME_KEY = createUniqueKey(Account.ACCOUNT, "account_username_key", Account.ACCOUNT.USERNAME);
        public static final UniqueKey<AddressRecord> ADDRESS_PKEY = createUniqueKey(Address.ADDRESS, "address_pkey", Address.ADDRESS.ID);
        public static final UniqueKey<ContactRecord> CONTACT_PKEY = createUniqueKey(Contact.CONTACT, "contact_pkey", Contact.CONTACT.ID);
        public static final UniqueKey<DocumentRecord> DOCUMENT_PKEY = createUniqueKey(Document.DOCUMENT, "document_pkey", Document.DOCUMENT.ID);
        public static final UniqueKey<PersonRecord> PERSON_PKEY = createUniqueKey(Person.PERSON, "person_pkey", Person.PERSON.ID);
        public static final UniqueKey<StorageLocationRecord> STORAGE_LOCATION_PKEY = createUniqueKey(StorageLocation.STORAGE_LOCATION, "storage_location_pkey", StorageLocation.STORAGE_LOCATION.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AccountRecord, PersonRecord> ACCOUNT__PERSON_ID_FK = createForeignKey(docrep.db.Keys.PERSON_PKEY, Account.ACCOUNT, "account__person_id_fk", Account.ACCOUNT.PERSON_ID);
        public static final ForeignKey<ContactRecord, PersonRecord> CONTACT__ID_PERSON_FK = createForeignKey(docrep.db.Keys.PERSON_PKEY, Contact.CONTACT, "contact__id_person_fk", Contact.CONTACT.PERSON_ID);
        public static final ForeignKey<DocumentRecord, AccountRecord> DOCUMENT__OWNER_ID_FK = createForeignKey(docrep.db.Keys.ACCOUNT_PKEY, Document.DOCUMENT, "document__owner_id_fk", Document.DOCUMENT.OWNER_ID);
        public static final ForeignKey<PersonRecord, AddressRecord> PERSON__ADDRESS_ID_FK = createForeignKey(docrep.db.Keys.ADDRESS_PKEY, Person.PERSON, "person__address_id_fk", Person.PERSON.ADDRESS_ID);
        public static final ForeignKey<StorageLocationRecord, StorageLocationRecord> STORAGE_LOCATION__SUPERIOR_STORAGE_LOC_ID_FK = createForeignKey(docrep.db.Keys.STORAGE_LOCATION_PKEY, StorageLocation.STORAGE_LOCATION, "storage_location__superior_storage_loc_id_fk", StorageLocation.STORAGE_LOCATION.SUPERIOR_STORAGE_LOC_ID);
        public static final ForeignKey<StorageLocationRecord, AccountRecord> STORAGE_LOCATION__ACCOUNT_ID_FK = createForeignKey(docrep.db.Keys.ACCOUNT_PKEY, StorageLocation.STORAGE_LOCATION, "storage_location__account_id_fk", StorageLocation.STORAGE_LOCATION.ACCOUNT_ID);
    }
}
